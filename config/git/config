# vim: ft=gitconfig fdm=marker:
[user]
    name = Fabien Meghazi
    email = agr@amigrave.com

[core]
    filemode = false
    quotepath = false

[color]
    ui = true
    diff = true
    status = true
    branch = auto

[rerere]
    enabled = true

[pretty]
    hist  = "%C(bold yellow)%h %C(bold green)(%ad) %C(reset)%C(red)[%an] %C(reset)%s %C(bold red)%d%C(reset)"
    histp = "%C(bold yellow)%h %C(reset)%C(yellow)%p %C(bold green)(%ad) %C(reset)%C(red)[%an] %C(reset)%s %C(bold red)%d%C(reset)" # with parents

# [http]
#     sslVerify = false

[status]
    submodulesummary = true

[diff]
    renames = true
    # noprefix = true # drops the a/filename.foo b/filename.foo prefixes
                      # disabled because it conflicts with gitgutter hunk stash

[difftool "vim-dirdiff"]
    cmd = vim -R -f '+next' '+execute \"DirDiff\" argv(0) argv(1)' $LOCAL $REMOTE '+syntax on'

[difftool "vim-dirdiff-local"]
    cmd = vim -R -f '+next' '+execute \"DirDiff\" argv(0) argv(1)' $LOCAL . '+syntax on'

# {{{ DELTA
[core]
    pager = delta

[interactive]
    diffFilter = delta --color-only --features=interactive

[delta]
    features = decorations
    navigate = true

[delta "interactive"]
    keep-plus-minus-markers = false

[delta "decorations"]
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = white bold
    hunk-header-line-number-style = yellow
    hunk-header-style = file line-number syntax
### }}}

[delta "split"]
    keep-plus-minus-markers = false

[format]
    pretty = fuller # more detail for "git show"

[merge]
    commit = no  # do not autocommit after merge
    ff = no
    tool = meld
    # defaultToUpstream = true

[pull]
    ff = only  # only pull if merge can be done as fast-forward

[rebase]
    instructionFormat = "%s -- %an <%ae>"

[alias]
    b   = branch
    bb  = branch -vv
    bbb = branch -vva
    bc  = branch -r --contains
    bd  = "!git branch | grep -v '* ' | iselect -am | xargs -r -n1 git branch -D"
    ci  = commit
    cia = commit --amend
    wip = commit -a -mwip
    cif = commit --fixup
    co  = checkout
    chp = cherry-pick
    shd = "!f() { clear; git show \"$@\" | delta --side-by-side; }; f"
    d   = diff
    dd  = "!f() { git diff \"$@\" | delta --side-by-side; }; f"
    dr = "!f() { git --no-pager diff; }; f"
    vd = difftool --dir-diff -t vim-dirdiff
    vdl = difftool --dir-diff -t vim-dirdiff-local
    dnp = diff --no-prefix
    fa  = fetch --all -p
    h   = "!git hh -10"
    hh  = "!git ll --stat"
    l   = "!git ll -20"
    l1  = log --pretty=oneline --abbrev-commit --color=never --format=format:"%an%x09%s"
    ll  = log --date=relative --pretty=hist
    lr = "!f() { git --no-pager log \"$@\"; }; f"
    ls  = ls-files
    lsd = "!git log --all --pretty=format: --name-only --diff-filter=D | sort -u"  # list deleted files
    lsi = ls-files --other --ignored --exclude-standard # list ignored files
    mff = merge --ff-only --no-commit
    p   = "!git fetch --prune; git rebase --autostash"
    rem = remote -v
    ri  = "!sh -c 'git rebase --interactive --autostash HEAD~$0'"
    rl  = reflog --date=iso
    rmb = "!git branch --no-color | fzf -m | xargs -I {} git branch -D '{}'"
    sa  = "!sh -c 'git stash apply stash@{$1}' -"
    sd  = "!sh -c 'git stash drop stash@{$1}' -"
    sh  = "!sh -c 'git stash show -p stash@{$1}' -"
    ski = stash --keep-index
    sl  = stash list --pretty=format:'%gd %Cblue%h %Cred* %C(yellow)%s'
    sp  = stash pop
    ss  = stash save
    s   = status --short --branch
    st  = status

    auth  = shortlog -s -n --all  # author statistics
    alias = "!sh -c 'git config --list | grep alias'"
    info  = "!for i in $(git remote); do git remote show $i -n; done"
    stats = shortlog -s -n --all
    subs  = submodule foreach git
    vimgs = "!sh -c 'vim -c ':Gstatus' .'"
    vimst = "!sh -c 'vim $(git ls-files --modified)'"

    force-ignore = update-index --assume-unchanged  # eg: when added to .git/info/exclude but was changed before
    undo-ignore = update-index --no-assume-unchanged

    fix-history = "! \
        export NAME=\"$(whiptail --nocancel --inputbox \"Author's name\" 10 60 3>&1 1>&2 2>&3)\"; \
        [ -z \"$NAME\" ] && exit; \
        export EMAIL=\"$(whiptail --nocancel --inputbox \"Author's email\" 10 60 3>&1 1>&2 2>&3)\"; \
        [ -z \"$EMAIL\" ] && exit; \
        git filter-branch -f --env-filter ' \
            export GIT_AUTHOR_EMAIL=\"$EMAIL\"; \
            export GIT_COMMITTER_EMAIL=\"$EMAIL\"; \
            export GIT_AUTHOR_NAME=\"$NAME\"; \
            export GIT_COMMITER_NAME=\"$NAME\"; \
            export GIT_COMMITTER_DATE=\"$GIT_AUTHOR_DATE\"; \
        '"

    remove-history = "! \
        files=$@ \
        git filter-branch --force --index-filter 'git rm -rf --cached --ignore-unmatch $files' HEAD \
        rm -rf .git/refs/original/ && git reflog expire --all &&  git gc --aggressive --prune"

    send-patch = "!sh -c 'git format-patch --stdout $0 | ssh $1 git -C $2 apply -v'"
    send-changes = "!sh -c 'git wip; git send-patch HEAD~1 $0 $1; git reset HEAD~1'"

[push]
    default = simple

[github]
    user = amigrave
