# vim:filetype=sh syntax=sh:
alias ps1c='. ~/.bashrc'

LESSPIPE=`which src-hilite-lesspipe.sh`
alias src='LESSOPEN="| ${LESSPIPE} %s" less'

# Aliases for lack of XDG support
alias mocp='mocp -M ~/.config/moc'
alias irssi='irssi --home=~/.config/irssi'

alias qmv='qmv --format=destination-only'
alias vim='vim -p '
alias ..="cd .."
alias m="cd /"
alias ll="ls -lAh --color=yes | less -r -E -X"
alias l="ls -lAh --color=yes "
alias d="ls --color=yes "
alias dusage="du -sk * | sort -nr | cut -f2 | xargs -d '\n' du -sh"
alias mc='command mc -c --printwd=/tmp/mc-$USER-$$-dir; cd "`cat /tmp/mc-$USER-$$-dir`"; rm -f "/tmp/mc-$USER-$$-dir"; :'
alias mcc='LANG=C mc'
alias ft='milkytracker'
alias adlib='adplay -r -b 8192'
alias am='uade123 --detect-format-by-content'
alias i='ipython -i ~/bin/agr.py'
alias ii='cd ~/bin; ipython qtconsole --ConsoleWidget.font_family="Menlo" --ConsoleWidget.font_size=12 --colors=linux --pprint -m agr &'
alias pudb='python -m pudb.run'
alias f="find . | egrep -i"
alias ag="ag --page=less"

alias termkey='tput smkx; cat; tput rmkx'
alias winrsync='rsync -rltDvu --modify-window=1 --progress'
alias webserve='python -m SimpleHTTPServer'
# alias v='DISPLAY=:0 mplayer -geometry 0x1366 -cache 4096 -fs'
alias v='DISPLAY=:0 mpv -cache 4096 -fs'
alias stream='vlc -vvv --sout udp:239.0.0.1 --no-sout-display --sout-keep --ttl 4'

alias s='screen -RdU'
TMUXCONF="~/.config/tmux/tmux.conf"
alias tm="tmux -f $TMUXCONF attach || tmux -f $TMUXCONF"

alias memo="e ~/Documents/agr/memos/"

alias mp3="find . -iname \*.mp3 | mpg123 -z -@ - -b 4096"
alias mpi="mp3info -x -F -r a"
alias lower='for i in *; do mv "$i" "$(echo $i | tr "[A-Z]" "[a-z]" )"; done'
alias upper='for i in *; do mv "$i" "$(echo $i | tr "[a-z]" "[A-Z]" )"; done'
alias chmodx="find . -type d -exec chmod 0755 '{}' ';'; find . -type f -exec chmod 0644 '{}' ';'"
alias chownx="sudo chown -R $USER:amigrave"

alias 7zx='for i in *.7z; do 7z x "$i"; done'
alias zipx='for i in *.zip; do unzip "$i"; done'
alias rarx='for i in *.rar; do rar x "$i"; done'

alias termtest="echo -e \"\e[38;5;196mred\e[38;5;46mgreen\e[38;5;21mblue\e[0m\""

# emu
alias sdl1="SDL_VIDEO_FULLSCREEN_HEAD=1 "
alias db='dosbox -c "MOUNT C . -freesize 1024" -c "c:"'
alias dbox="dosbox -conf ~/local/bin/bin-Dos-i386/dosbox.conf ."
alias dboxcd="dosbox -conf ~/local/bin/bin-Dos-i386/dosbox_cd.conf ."
alias msx="mess msx -cart1 \`iselect -a *\`"
alias ami='files=(*.adf); amiga -0 "${files[0]}" -1 "${files[1]}" -2 "${files[2]}" -3 "${files[3]}"'

alias g='git'
alias cdiff='cdiff -s -w0'
alias git-force-ignore='git update-index --assume-unchanged'
alias bfg='java -jar ~/bin/java/bfg*'

# FUNCTIONS
function shellshock() {
    if [ -z "$1" ]; then
        shellshock 'bash'
        echo
        echo "----------------------------------------------------------------"
        echo "You should also check with other values, eg:  /bin/bash, /bin/sh"
    else
        # Checks it you are vulnerable to shellshock
        # http://serverfault.com/questions/631257/how-to-test-if-my-server-is-vulnerable-to-the-shellshock-bug
        echo "************************* Checking $1"
        env X="() { :;} ; echo YOU_ARE_VULNERABLE_TO_SHELLSHOCK" $1 -c "echo ' '"
        echo "************************* Checking $1 (/tmp/echo should not exist)"
        cd /tmp
        env X='() { (a)=>\' $1 -c "echo date"
        if [ -f echo ]; then
            echo "YOU_ARE_VULNERABLE_TO_SHELLSHOCK"
            rm echo
        fi
    fi
}
function findrecent() {
    find $1 -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort -r | less
}
function assh() {
    autossh -x "$*" 'screen -RdU'
}
function pclean() {
    find . -name "*.pyc" -delete
    find . -name "*.THIS" -delete
    find . -name "*.BASE" -delete
    find . -name "*.OTHER" -delete
    find . -name "*.~*~" -delete
    find . -name ".DS_Store" -delete
    find . -name '.sass-cache' -type d | xargs rm -rf
    find . -name "*.moved" -delete
    # find . -type d -empty ! -path '*/.bzr/*' -delete
}
man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}
activate() {
    local VIRTUALENV_DIRECTORY=".env"
    local PATH_TO_VIRTUALENV=$(pwd)

    while [ "$PATH_TO_VIRTUALENV" != '/' ]
    do
        if [ -r "$PATH_TO_VIRTUALENV/$VIRTUALENV_DIRECTORY/bin/activate" ]
        then
            source "$PATH_TO_VIRTUALENV/$VIRTUALENV_DIRECTORY/bin/activate"
            return 0
        fi

        PATH_TO_VIRTUALENV=$(dirname "$PATH_TO_VIRTUALENV")
    done

    echo "Could not find a virtualenv"
    return 1
}
