# vim:filetype=sh syntax=sh:fdm=marker:

# Manually provide config file {{{
# TODO: put this in $AMIGRAVE/bin so it's not confined to shells
alias mocp="mocp -M $DOTFILES/moc"
alias irssi="irssi --home=$DOTFILES/irssi"
alias tmux="tmux -f $DOTFILES/tmux/tmux.conf"
alias flake8="flake8 --config=$DOTFILES/flake8"
# }}}

# Application shadowers {{{
alias vim='vim -p '
alias ssh="autossh"
alias qmv='qmv --format=destination-only'
alias mc='command mc -c --printwd=/tmp/mc-$USER-$$-dir; cd "`cat /tmp/mc-$USER-$$-dir`"; rm -f "/tmp/mc-$USER-$$-dir"; :' # make mc cd's to last browsed directory
alias ag="ag --page=less"
alias ack="ack --pager=less --color-match=red"
alias cdiff='cdiff -s -w0'
# }}}

# Application shortcuts {{{
alias i="ipython"
alias qi="ipython qtconsole --ConsoleWidget.font_family='Menlo' --ConsoleWidget.font_size=12 --colors=linux --pprint &"

alias dk='sudo docker'
alias dkb='sudo docker build --force-rm=true --no-cache=true'

alias tm="tmux attach || tmux"
alias s='screen -RdU'
alias mp3="find . -iname \*.mp3 | mpg123 -z -@ - -b 4096"
alias mpi="mp3info -x -F -r a"
alias adlib='adplay -r -b 8192'
alias f="find . | egrep -i"
alias v='DISPLAY=:0 mpv -cache 4096 -fs'
# }}}

# Path naviguation {{{
alias d="LC_ALL=C ls --color=yes "
alias l="LC_ALL=C ls -lh --color=yes "
alias ll="LC_ALL=C ls -lAh --color=yes | less -r -E -X"
# }}}

# Misc utils {{{
alias please='sudo -E $(fc -ln -1)'
alias C='LANG=C'
alias lower='for i in *; do mv "$i" "$(echo $i | tr "[A-Z]" "[a-z]" )"; done'
alias upper='for i in *; do mv "$i" "$(echo $i | tr "[a-z]" "[A-Z]" )"; done'
alias chmodx="find . -type d -exec chmod 0755 '{}' ';'; find . -type f -exec chmod 0644 '{}' ';'"
alias chownx="sudo chown -R $USER:$(id -g -n $USER)"
alias dusage="du -sk * | sort -nr | cut -f2 | xargs -d '\n' du -sh"
# Make a function out of this or even consider to put it in agr.py
# alias setdate="sudo date -s \"$(curl -sD - google.com | grep ^Date: | cut -d' ' -f3-6)Z\""

alias vbox_reload="killall VBoxClient; VBoxClient-all"
alias git-force-ignore='git update-index --assume-unchanged'
alias svnupdry='svn merge --dry-run -r BASE:HEAD .'
alias bfg='java -jar ~/bin/java/bfg*'

alias ssh-nokey="ssh -o PreferredAuthentications=keyboard-interactive,password -o PubkeyAuthentication=no"

alias winrsync='rsync -rltDvu --modify-window=1 --progress'
alias webserve='python -m SimpleHTTPServer'
alias vlc_stream='vlc -vvv --sout udp:239.0.0.1 --no-sout-display --sout-keep --ttl 4'
alias termtest="echo -e \"\e[38;5;196mred\e[38;5;46mgreen\e[38;5;21mblue\e[0m\""
alias termkey='tput smkx; cat; tput rmkx'
alias euro="echo -e \\0342\\0202\\0254"   # Used to check UTF8 in term
# }}}

# Emulation {{{
alias sdl1="SDL_VIDEO_FULLSCREEN_HEAD=1 "
alias db='dosbox -c "MOUNT C . -freesize 1024" -c "c:"'
alias dbox="dosbox -conf $DOTFILES/local/bin/bin-Dos-i386/dosbox.conf ."
alias dboxcd="dosbox -conf ~/local/bin/bin-Dos-i386/dosbox_cd.conf ."
alias msx="mess msx -cart1 \`iselect -a *\`"
alias ami='files=(*.adf); amiga -0 "${files[0]}" -1 "${files[1]}" -2 "${files[2]}" -3 "${files[3]}"'
# }}}

# Linux aliases {{{
if [[ "$OSTYPE" == "linux" || "$OSTYPE" == "linux-gnu" ]]; then

alias e="gvim-agr --remote-tab-silent"
alias ack="ack-grep --pager=less --color-match=red"
alias burniso='wodim dev=/dev/scd0 driveropts=burnfree,noforcespeed fs=14M speed=16 -dao -eject -overburn -v'
alias drop_cache='sync; echo 3 > /proc/sys/vm/drop_caches'
# alias man="TERMINFO=$HOME/.terminfo/ LESS=C TERM=mostlike PAGER=less man"
alias kid="kid3-qt ."
alias o="xdg-open"
alias qmv='qmv -f do'
alias track='inotifywait -rm . | grep -iE "(modify |create |delete|attrib|moved)"'
alias tsys="tail -f /var/log/dmesg /var/log/messages"
alias ubuntuwin="gconftool-2 --set /apps/metacity/general/button_layout --type string menu:minimize,maximize,close"
alias vboxusb="sudo chown -R amigrave:vboxusers /proc/bus/usb"
alias vir='clamscan -r *'
alias virtualization='egrep "^flags.*(vmx|svm)" /proc/cpuinfo' # check for virtualization instructions
alias zsnes_gamepad="sudo ln -s /dev/input/js0 /dev/js0"

fi
# }}}

# OSX aliases {{{
if [[ "$OSTYPE" =~ darwin* ]]; then

alias vim="mvim -v"
alias e="mvim --remote-tab-silent"

alias jsc="/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc"
alias jjs="rlwrap /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/bin/jjs"
alias kid3="/Applications/kid3.app/Contents/MacOS/kid3 ."
alias xee="/Applications/Xee.app/Contents/MacOS/Xee"
alias safari="/Applications/Safari.app/Contents/MacOS/Safari"
alias google-chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias google-chrome-canary="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary --disable-web-security"
alias clementine="/Applications/clementine.app/Contents/MacOS/clementine"
alias gimp="/Applications/Gimp.app/Contents/MacOS/Gimp"
alias milkytracker="/Applications/MilkyTracker.app/Contents/MacOS/MilkyTracker"
alias fsuae="/Applications/FS-UAE.app/Contents/MacOS/fs-uae $DOTFILES/fs-uae/fs-uaerc"
alias pixelmator="/Applications/Pixelmator.app/Contents/MacOS/Pixelmator"
alias ggx2="cd ~/.wine/drive_c/Program\ Files/ZOO\ Digital\ Publishing/GUILTY\ GEAR\ X2\ #RELOAD/; wine ggx2.exe"
alias bitcoin="/Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt -conf=$DOTFILES/bitcoin/bitcoin.conf -datadir=$XDG_CONFIG_HOME/bitcoin/ &"
alias retroarch="/Applications/RetroArch.app/Contents/MacOS/RetroArch"

fi
# }}}

# Cygwim aliases {{{
if [[ "$OSTYPE" == "cygwin" ]]; then

alias e="/cygdrive/c/PROGRA~1/Vim/vim74/gvim.exe --remote-tab-silent"
alias jsc1="/cygdrive/c/WINNT/Microsoft.NET/Framework/v1.*/jsc.exe"
alias jsc2="/cygdrive/c/WINNT/Microsoft.NET/Framework/v2.*/jsc.exe"
alias jsc3="/cygdrive/c/WINNT/Microsoft.NET/Framework/v3.*/jsc.exe"
alias jsc4="/cygdrive/c/WINNT/Microsoft.NET/Framework/v4.*/jsc.exe"

alias csc1="/cygdrive/c/WINNT/Microsoft.NET/Framework/v1.*/csc.exe"
alias csc2="/cygdrive/c/WINNT/Microsoft.NET/Framework/v2.*/csc.exe"
alias csc3="/cygdrive/c/WINNT/Microsoft.NET/Framework/v3.*/csc.exe"
alias csc4="/cygdrive/c/WINNT/Microsoft.NET/Framework/v4.*/csc.exe"

alias cyginstall='/setup.exe -q -n -N -d -R "c:\cygwin" -s "http://mirrors.kernel.org/sourceware/cygwin/" -l "c:\cygwin\tmp" -P '

fi
# }}}

# FUNCTIONS {{{
function check_pings() {
    if [ -z "$1" ]; then
        check_pings 'eth0'
    else
        echo "Checking pings on interface $1"
        tcpdump -i $1 icmp and icmp[icmptype]=icmp-echo
    fi
}
function shellshock() {
    if [ -z "$1" ]; then
        shellshock 'bash'
        echo
        echo "----------------------------------------------------------------"
        echo "You should also check with other values, eg:  /bin/bash, /bin/sh"
    else
        # Checks it you are vulnerable to shellshock
        # http://serverfault.com/questions/631257/how-to-test-if-my-server-is-vulnerable-to-the-shellshock-bug
        echo "************************* Checking $1"
        env X="() { :;} ; echo YOU_ARE_VULNERABLE_TO_SHELLSHOCK" $1 -c "echo ' '"
        echo "************************* Checking $1 (/tmp/echo should not exist)"
        cd /tmp
        env X='() { (a)=>\' $1 -c "echo date"
        if [ -f echo ]; then
            echo "YOU_ARE_VULNERABLE_TO_SHELLSHOCK"
            rm echo
        fi
    fi
}
function findrecent() {
    find $1 -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort -r | less
}
function assh() {
    autossh -x "$*" 'screen -RdU'
}
function pclean() {
    find . -name "*.pyc" -delete
    find . -name "*.THIS" -delete
    find . -name "*.BASE" -delete
    find . -name "*.OTHER" -delete
    find . -name "*.~*~" -delete
    find . -name ".DS_Store" -delete
    find . -name '.sass-cache' -type d | xargs rm -rf
    find . -name "*.moved" -delete
    # find . -type d -empty ! -path '*/.bzr/*' -delete
}
# man() {
#     env LESS_TERMCAP_mb=$'\E[01;31m' \
#     LESS_TERMCAP_md=$'\E[01;38;5;74m' \
#     LESS_TERMCAP_me=$'\E[0m' \
#     LESS_TERMCAP_se=$'\E[0m' \
#     LESS_TERMCAP_ue=$'\E[0m' \
#     LESS_TERMCAP_us=$'\E[04;38;5;146m' \
#     man "$@"
# }
activate() {
    local VIRTUALENV_DIRECTORY=".env"
    local PATH_TO_VIRTUALENV=$(pwd)

    while [ "$PATH_TO_VIRTUALENV" != '/' ]
    do
        if [ -r "$PATH_TO_VIRTUALENV/$VIRTUALENV_DIRECTORY/bin/activate" ]
        then
            source "$PATH_TO_VIRTUALENV/$VIRTUALENV_DIRECTORY/bin/activate"
            return 0
        fi

        PATH_TO_VIRTUALENV=$(dirname "$PATH_TO_VIRTUALENV")
    done

    echo "Could not find a virtualenv"
    return 1
}
# }}}
