#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import absolute_import, division, print_function

import argparse
import subprocess
import sys

parser = argparse.ArgumentParser()
parser.add_argument("commit", help="The commit to edit")
args = parser.parse_args()

commit = args.commit
try:
    date = subprocess.check_output(['git', 'show', '-s', '--format=%ci', commit])
except subprocess.CalledProcessError:
    sys.exit("Could not get date of commit %s" % commit)

args = ['--nocancel', '--inputbox', 'New date', '7', '40', date.strip()]
p = None
for prog in ('whiptail', 'dialog'):
    try:
        p = subprocess.Popen([prog] + args, stderr=subprocess.PIPE)
        break
    except Exception:
        continue
if p is None:
    sys.exit("Could not execute whiptail or dialog")
newdate = p.communicate()[1].strip()

if date.strip() == newdate.strip():
    print("Nothing to do.")
    sys.exit()

gitcmd = ['git', 'filter-branch', '-f', '--env-filter', """
    if test $GIT_COMMIT = "{commit}"; then
        export GIT_COMMITTER_DATE="{newdate}";
        export GIT_AUTHOR_DATE="{newdate}";
    fi""".format(**locals()), '%s~1..HEAD' % commit]

# subprocess.call(['git', 'stash', 'save'])
subprocess.call(gitcmd)
# subprocess.call(['git', 'stash', 'pop'])
